var gaugeExecutionResult = {"suiteResult":{"specResults":[{"protoSpec":{"specHeading":"Specification Heading","items":[{"itemType":2,"comment":{"text":"\n"}},{"itemType":2,"comment":{"text":"This is an executable specification file. This file follows markdown syntax. Every heading in this file denotes a scenario. Every bulleted point denotes a step."}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":2,"comment":{"text":"To execute this specification, use"}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":2,"comment":{"text":"\u0009gauge spec/hello_world.spec"}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":1,"step":{"actualText":"A context step which gets executed before every scenario","parsedText":"A context step which gets executed before every scenario","fragments":[{"fragmentType":1,"text":"A context step which gets executed before every scenario"}]}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":4,"scenario":{"scenarioHeading":"First scenario","failed":false,"contexts":[{"itemType":1,"step":{"actualText":"A context step which gets executed before every scenario","parsedText":"A context step which gets executed before every scenario","fragments":[{"fragmentType":1,"text":"A context step which gets executed before every scenario"}],"stepExecutionResult":{"executionResult":{"failed":false,"executionTime":0}}}}],"scenarioItems":[{"itemType":2,"comment":{"text":"\n"}},{"itemType":7},{"itemType":2,"comment":{"text":"\n"}},{"itemType":1,"step":{"actualText":"Say \"hello\" to \"gauge\"","parsedText":"Say {} to {}","fragments":[{"fragmentType":1,"text":"Say "},{"fragmentType":2,"parameter":{"parameterType":1,"value":"hello","name":""}},{"fragmentType":1,"text":" to "},{"fragmentType":2,"parameter":{"parameterType":1,"value":"gauge","name":""}}],"stepExecutionResult":{"executionResult":{"failed":false,"executionTime":2}}}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":2,"comment":{"text":"\n"}}],"tags":["hello world","first test"],"executionTime":2}},{"itemType":4,"scenario":{"scenarioHeading":"Second scenario for the specification","failed":false,"contexts":[{"itemType":1,"step":{"actualText":"A context step which gets executed before every scenario","parsedText":"A context step which gets executed before every scenario","fragments":[{"fragmentType":1,"text":"A context step which gets executed before every scenario"}],"stepExecutionResult":{"executionResult":{"failed":false,"executionTime":0}}}}],"scenarioItems":[{"itemType":2,"comment":{"text":"\n"}},{"itemType":2,"comment":{"text":"This is the second scenario in this specification"}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":1,"step":{"actualText":"Say \"hello again\" to \"gauge\"","parsedText":"Say {} to {}","fragments":[{"fragmentType":1,"text":"Say "},{"fragmentType":2,"parameter":{"parameterType":1,"value":"hello again","name":""}},{"fragmentType":1,"text":" to "},{"fragmentType":2,"parameter":{"parameterType":1,"value":"gauge","name":""}}],"stepExecutionResult":{"executionResult":{"failed":false,"executionTime":0}}}},{"itemType":1,"step":{"actualText":"Step that takes a table","parsedText":"Step that takes a table {}","fragments":[{"fragmentType":1,"text":"Step that takes a table "},{"fragmentType":2,"parameter":{"parameterType":5,"name":"","table":{"headers":{"cells":["Product","Description"]},"rows":[{"cells":["Gauge","BDD style testing with ease"]},{"cells":["Mingle","Agile project management"]},{"cells":["Snap","Hosted continuous integration"]},{"cells":["Gocd","Continuous delivery platform"]}]}}}],"stepExecutionResult":{"executionResult":{"failed":false,"executionTime":1}}}},{"itemType":2,"comment":{"text":"\n"}}],"executionTime":1}}],"isTableDriven":false,"fileName":"/home/vagrant/projects/gauge/specs/hello_world.spec"},"scenarioCount":2,"scenarioFailedCount":0,"failed":false,"executionTime":3}],"failed":false,"specsFailedCount":0,"executionTime":31,"successRate":100}};
 var itemTypesMap = {"1":"Step","2":"Comment","3":"Concept","4":"Scenario","5":"TableDrivenScenario","6":"Table"};
 var parameterTypesMap = {"1":"Static","2":"Dynamic","3":"Special_String","4":"Special_Table","5":"Table"};
 var fragmentTypesMap = {"1":"Text","2":"Parameter"};